// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RendezVous.Data;

#nullable disable

namespace RendezVous.Migrations
{
    [DbContext(typeof(RDVAppContext))]
    [Migration("20221019115158_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RendezVous.Models.Client", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.Consultation", b =>
                {
                    b.Property<int>("ConsultationTD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultationTD"), 1L, 1);

                    b.Property<int>("ClientID")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<int>("MedecinID")
                        .HasColumnType("int")
                        .HasColumnName("medecin_id");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<int>("TypeConsultationID")
                        .HasColumnType("int")
                        .HasColumnName("type_consultation_id");

                    b.HasKey("ConsultationTD");

                    b.HasIndex("ClientID");

                    b.HasIndex("MedecinID");

                    b.HasIndex("TypeConsultationID");

                    b.ToTable("Consultation", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.Disponibilite", b =>
                {
                    b.Property<int>("DisponibiliteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisponibiliteID"), 1L, 1);

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("JourDeLaSemaine")
                        .HasColumnType("int");

                    b.Property<int>("MedecinID")
                        .HasColumnType("int")
                        .HasColumnName("medecin_id");

                    b.HasKey("DisponibiliteID");

                    b.HasIndex("MedecinID");

                    b.ToTable("Disponibilite", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.Medecin", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Matricule")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SpecialiteID")
                        .HasColumnType("int")
                        .HasColumnName("specialite_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Matricule")
                        .IsUnique();

                    b.HasIndex("SpecialiteID");

                    b.ToTable("Medecin", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.Specialite", b =>
                {
                    b.Property<int>("SpecialiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialiteID"), 1L, 1);

                    b.Property<string>("NomSpecialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nom_de_specialite");

                    b.HasKey("SpecialiteID");

                    b.ToTable("Specialite", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.TypeConsultation", b =>
                {
                    b.Property<int>("TypeConsultationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeConsultationID"), 1L, 1);

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<int>("SpecialiteID")
                        .HasColumnType("int")
                        .HasColumnName("specialite_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeConsultationID");

                    b.HasIndex("SpecialiteID");

                    b.ToTable("TypeConsultation", (string)null);
                });

            modelBuilder.Entity("RendezVous.Models.Consultation", b =>
                {
                    b.HasOne("RendezVous.Models.Client", "Client")
                        .WithMany("Consultations")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RendezVous.Models.Medecin", "Medecin")
                        .WithMany("Consultations")
                        .HasForeignKey("MedecinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RendezVous.Models.TypeConsultation", "TypeConsultation")
                        .WithMany("Consultations")
                        .HasForeignKey("TypeConsultationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Medecin");

                    b.Navigation("TypeConsultation");
                });

            modelBuilder.Entity("RendezVous.Models.Disponibilite", b =>
                {
                    b.HasOne("RendezVous.Models.Medecin", "Medecin")
                        .WithMany("Disponibilites")
                        .HasForeignKey("MedecinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("RendezVous.Models.Medecin", b =>
                {
                    b.HasOne("RendezVous.Models.Specialite", "Specialite")
                        .WithMany("Medecins")
                        .HasForeignKey("SpecialiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialite");
                });

            modelBuilder.Entity("RendezVous.Models.TypeConsultation", b =>
                {
                    b.HasOne("RendezVous.Models.Specialite", "Specialite")
                        .WithMany("TypeConsultations")
                        .HasForeignKey("SpecialiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialite");
                });

            modelBuilder.Entity("RendezVous.Models.Client", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("RendezVous.Models.Medecin", b =>
                {
                    b.Navigation("Consultations");

                    b.Navigation("Disponibilites");
                });

            modelBuilder.Entity("RendezVous.Models.Specialite", b =>
                {
                    b.Navigation("Medecins");

                    b.Navigation("TypeConsultations");
                });

            modelBuilder.Entity("RendezVous.Models.TypeConsultation", b =>
                {
                    b.Navigation("Consultations");
                });
#pragma warning restore 612, 618
        }
    }
}
